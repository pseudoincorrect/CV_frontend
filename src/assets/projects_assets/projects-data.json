{
    "projects": 
    [
        {
            "title": "Mesh Enabled Health Monitoring Application(Hardware and Full Stack application)",
            "mainPicture": "assets/projects_assets/mesh/architecture.png",
            "summary": "<h5>How can we monitor the health status of a large group of individual over a large area with low budget, easily deployable solution ?</h5><p>Along with Nerd (the rat brain implant), <strong>this project is part of my most ambitious ones</strong>. It took place in a research project aiming at predicting the hydration level of multiple persons with a low-cost, low power and easily scalable system. In the context of the World Cup Happening in Qatar in 2022, the Qatari government encouraged the emergence of projects, that aimed to an increase of the well-being of the construction employees working outdoor, sometime under high temperatures and humidity conditions. One of the answer we came up with, was to <strong>provide a low-budget, long range monitoring system for these particular persons, based on wireless mesh network</strong>.</p>",
            "details": "<h3><strong> Now, for the practical part: </strong></h3><p>We are developing a custom wrist-mounted device, RF enabled, that integrates into a low-power Mesh network ( <strong> OpenThread </strong> ). All Bio data are sent to our server hosting a <strong> full stack application </strong> (backend/database and front end). This <strong> system is easily scalable </strong> so hundreds of companies can monitor the health status of hundreds of their employees.&nbsp;</p><h3><br /> <strong> Overall Behavior and Hierarchy of the system:</strong><strong>&nbsp;&nbsp;</strong></h3><p><strong>Each person is wearing a custom smart wristwatch </strong> that contains essentially two <strong> temperature sensors </strong> (on for the skin and one for the ambient temperature, one <strong> hear rate / oximetry sensor </strong> (oxygen level), and one <strong> dehydration sensor </strong> (that is still under development with our research team). Each of these devices is transmitting and listening data from the RF low-power network they are authenticated to, at regular intervals. The network is created by a set of routers that relay the sensor data to a gateway, which is a router connected to a board computer with an internet access. This <strong> RF mesh network protocol </strong> is the <strong> OpenThread </strong> implementation, for low-power, (relatively) high bandwidth and latency, and robustness. This Gateway, send data to our <strong> backend application, hosted online </strong> , with a by <strong> directional communication </strong> . That way, our server online can received and send data to each node. Finally we designed a frontend application (website) that can display all of these data and control the overall behavior of the system. Moreover, this system integrate user authentication, meaning that we can easily scale this system up, so that many different company can have their own sets of wristwatch/routers/gateway and access their data online, securely, as we are using the latest security technologies, both for the online server, the mesh network and the hardware.&nbsp;</p><h3><br /> <strong> The breakdown of the project's components (and codes):&nbsp; </strong></h3><ul><li><strong> Wrist-mounted device </strong> (wristwatch), containing sensors and wireless chip for the mesh network communication, battery powered, with a firmware written in C. This system is custom made by our team, which concerns both the Printed Circuit Board (PCB) and the wristwatch bracelet (3D printed with hard and soft materials).&nbsp;</li><li><strong> Mesh Router device </strong> (plugged to a wall socket) containing a wireless chip with a power amplifier (firmware written in C as well). This system is also custom made (PCB, and 3D printed case).&nbsp;</li><li><strong> Mesh Gateway device </strong> with the same component as the Router above; it role is entirely different as It is the interface between our mesh network and the single board computer, with which they communicate via a serial connection (C programming).&nbsp;</li><li><strong> Gateway device </strong> , which is a single board computer running a NodeJS daemon program, which make the link between our full-stack application and the Mesh network (JavaScript).&nbsp;</li><li><strong> Backend server application </strong> , Which consists into a REST API coupled with a Database. We used NodeJS with Express and MongoDB. This application was written in JavaScript.&nbsp;</li><li><strong> Frontend Application </strong> (hosted by the backend server) that uses the Angular framework (Typescript/ JavaScript).&nbsp; <br /> The 6 above parts are 6 independents programs and physical devices (except for the frontend application and backend server that are run on online servers).&nbsp;</li></ul>",
            "pictures": [
                "assets/projects_assets/mesh/gui1.png",
                "assets/projects_assets/mesh/gui2.png",
                "assets/projects_assets/mesh/gui3.png",
                "assets/projects_assets/mesh/pcb.png",
                "assets/projects_assets/mesh/pcb_dev.png"
            ],
            "tags": ["Open Thread Mesh", "Full-Stack Application", "C programming", "JavaScript", "PCB design", "Deployment"],
            "location": "HBKU, Doha, Qatar",
            "date": "2018"
        },
        {
            "title": "Bluetooth Health Status Monitory (with GUI)",
            "mainPicture": "assets/projects_assets/bluetoothHealth/pcb_hand.jpg",
            "summary": "<h5>How to monitor and display the health status of multiple persons in a room in a star configuration with a light weight, low power wearable device ?</h5><p><br /> This project is the previous Version of the Mesh enabled health monitoring system. The technologies used are so different that it has its place among my major projects. The goal is similar but on a much reduced scale as we opted for a<strong> star topology where all nodes were connected to a central PC with Python GUI (PyQt)</strong>, supporting <strong>multithreads</strong> for all I/O (inputs outputs) operations.</p>",
            "details": "<h5>The aim of this project is to create a system that could be worn by each of the workers and transmit its sensor data to a base station located in the room.</h5><p>We therefore used the Bluetooth 4.2 (BLE) protocol in a star topology with a base station being a computer for display and storage.</p><p>The embedded system consisted into a Nordic Semiconductor wireless MCU along power supply/management, vibration motor, LED and a FFC connector to connect multiple sensors. The base station connected to the PC was containing the same Nordic Semi chip along with a UART/USB interfacing chip. The data were then displayed on the PC. By the architecture of our system, we could connect as many node to the base station as the Bluetooth bandwidth would allow, which represents hundreds of nodes, as each node only transmit few times per minutes (which is selectable). The system is bidirectional, meaning that the Base station could send notifications/warning to the embedded system and vice versa. We designed the<strong> PCB with Eagle (Cadsoft)</strong> and made it manufactured in China, soldered in Qatar by ourselves. The code was made in C with Segger Embedded Studio. The <strong>Graphical application</strong> was written in <strong>Python with PyQt for a quick prototyping</strong>.</p>",
            "pictures": [
                "assets/projects_assets/bluetoothHealth/pcb_gui.jpg",
                "assets/projects_assets/bluetoothHealth/pcb.jpg",
                "assets/projects_assets/bluetoothHealth/gui.jpg",
                "assets/projects_assets/bluetoothHealth/wearable.jpg",
                "assets/projects_assets/bluetoothHealth/cad.png"
            ],
            "tags": ["C programming", "Python GUI", "multithreading", "smart clothes", "PCB design", "Bluetooth"],
            "location": "HBKU, Doha, Qatar",
            "date": "2017"
        },
        {
            "title": "Electronic Laboratory Management",
            "mainPicture": "assets/projects_assets/lab/lab1.jpg",
            "summary": "<h5>A part of my position as IoT engineer and Laboratory Manager was to set-up and is to take care of the laboratory of our (Computing Sciences) division. The current laboratory include 29 workstations. The principle manipulations and workstation themes are the following ones:</h5><ul><li>Soldering, Reworking and reflowing</li><li>PCB manufacturing with a laser CNC</li><li>Inkjet printing for smart wearables (conductive ink printing on diverse fabrics)</li><li>Low frequency signal characterization (Oscilloscope, LRC, Source meter, &hellip;)</li><li>High frequency signals characterization (RF analyzer, function generation, Logic analyze, &hellip;)</li><li>General purpose/teaching electronic workstations</li><li>Visible light communication manipulation</li><li>Software Defined Network manipulation</li><li>Eyes tracking devices manipulation</li><li>Healthcare platform development</li><li>Engineering lab part with mechanical tools</li><li>CNC and 3D printers</li><li>Electronic consumables selection and storage</li><li>Non-hazardous chemical storage</li></ul>",
            "details": "<p>Regarding most of these workstations, manipulations and consumables we <strong>designed all the technical specifications</strong> in term of our projects needs but also in terms of <strong>safety</strong>, <strong>storage</strong> and <strong>maintenance</strong>. This helped me significantly to develop my <strong>organization skills, my human contact with the different actor involved in laboratory management</strong> and my knowledge about the state of the market for the electronic machinery and consumables. In term of my work schedule and achievement, The set-up of the lab was time consuming only for <strong>6 months during the design and set-up of the lab</strong> in collaboration with our Facility management team, the safety team and our procurement team that leveraged the administrative work, leaving us only the <strong>essential technical work to do</strong>. For the two and half following years, I only assisted on critical issues and seldom set-up of new machinery.</p>",
            "pictures": [
                "assets/projects_assets/lab/lab2.jpg",
                "assets/projects_assets/lab/lab1.jpg"
            ],
            "tags": ["Laboratory", "Management", "Electronic", "Safety"],
            "location": "HBKU, Doha, Qatar",
            "date": "2016 to now"
        },
        {
            "title": "7 Various projects for the college of science and engineering",
            "mainPicture": "assets/projects_assets/ledPump/line_digital.jpg",
            "summary": "<h5>During my career of IoT engineer and Laboratory Manager, I participated to various students and researcher projects. Thereafter is a highlight of the projects that I worked on, with a major or total contribution.&nbsp;</h5><ul><li>Python Web Crawler</li><li>Controlled LED panel</li><li>Automated pumping system</li><li>Line following robot with TTL logic</li><li>Line following robot with Arm Microcontroller</li><li>Bluetooth BLE connection for remote sensors</li><li>Smart composter design only</li></ul>",
            "details": "<h5>Python Web Crawler</h5><p>For this project, I designed a web crawler used to collect the data of our ERP system, sort them and gather them into a spreadsheet. This program was mainly using Selenium, a browser controller library used to automate test but not only. The goal was to automate a repetitive task that slowed down our division work in term of material resources management.&nbsp;</p><h5>Controlled LED panel</h5><p>In the context of sustainable energy development. A Research set up a protocol to analyze the different reaction of bacterial solution exposed to light with multiple wavelength. For this reason, we designed a rectangular paned including LEDs, controller, and microcontroller and power supply</p><h5>Automated pumping system</h5><p>One of our college experimentation implied that solution rich in nitrate was injected at regular intervals into a larger bacterial solution. To do so, we (rapidly) developed a systems controlling our pump and displaying the necessary information on a screen.</p><h5>Line following robot with TTL logic</h5><p>In order to introduce our undergrads students to Digital Systems and Electronic, we build a set&nbsp; of lab around a line following robot. In my particular case, I designed the robot out of TTL logic components and light emitter/receiver sensor (Led and photodiode).</p><h5>Line following robot with Arm Microcontroller</h5><p>Although this project looks like the one above, I set up a race competition for high school student during our University holiday to introduce them happily to Computer Sciences. Thus I built with them around 15 line following robot, this time controlled by a Microcontroller (MCU) in order to simplify the implementation (and keep them interested). For this we used 3 different MCU technologies: STM32, and Arduino.</p><h5>Bluetooth BLE connection for remote sensors and python logger</h5><p>For this project a student wanted help on how to link sensors to a computer wirelessly and without much complexity. Therefore we headed to an Arduino + serial Bluetooth connection with a simple python script to log data on a computer.</p><h5>Smart composter design only</h5><p>The goal of this project was to design a &ldquo;smart composter&rdquo; that would be used to monitor the degradation of alimentary product. It consisted mainly into linking sensor to a data logger, and to control the composter in term of temperature, humidity (by injecting water) and rotating a helix to move the processed food inside the composter, the student is currently implementing our solution.</p>",
            "pictures": [
                "assets/projects_assets/ledPump/line_mcu.jpg",
                "assets/projects_assets/ledPump/pump.jpg",
                "assets/projects_assets/ledPump/se.png"

            ],
            "tags": ["Rapid Prototyping", "Python", "TTL logic", "Bluetooth", "C programming" ],
            "location": "HBKU, Doha, Qatar",
            "date": "2016 to now"
        },
        {
            "title": "Laboratories for graduate and PhD students in digital systems design and computer architecture",
            "mainPicture": "assets/projects_assets/pocsd/de2.jpg",
            "summary": "<h5>I wrote and taught a set of 5 laboratories exercises for graduate and PhD students of HBKU university.</h5><p>These labs were approaching a various set of subjects regarding <strong>Digital System Design and computer architecture</strong>, such as combinational and sequential logic, finite state machines, pipelining and optimization. This is where I realized that having all the necessary knowledge does not imply that the teaching will be successful. My first semester teaching <strong>this class taught me more than a decade of student and active life</strong> in regard to human relationship.</p>",
            "details": "<p>Here is the truth: the <strong>first year was not a success with this class</strong>. Even though I was <strong>perfectly skilled on the technical plan</strong>, my teaching method was to be revised. So for the coming year I spent countless of hours training my communication and teaching skills, how to approach people and motivate them to learn; with <strong>books, online classes and lots of practice</strong>. <strong>The results for the next class, were above my expectations</strong>. Students were extremely motivated and stayed late after to continue learning. Overall, this teaching experience was a success and taught me much more than technical skills.</p>",
            "pictures": [
                "assets/projects_assets/pocsd/architecture.png",
                "assets/projects_assets/pocsd/arm.jpg",
                "assets/projects_assets/pocsd/microelectronics.jpg"
            ],
            "tags": ["FPGA, Verliog", "Block Diagrams", "Teaching", "Digital Design", "Computer Architecture"],
            "location": "HBKU, Doha, Qatar",
            "date": "2016 to now"
        },
        {
            "title": "FPGA Wifi Link",
            "mainPicture": "assets/projects_assets/fpgaWifi/fpgaWifi.jpg",
            "summary": "<h5>How can we send FPGA&rsquo;s data online reliably at a high rate?</h5><p>The purpose of this project is to link a<strong> FPGA connected</strong> to many <strong>sensors</strong> to one of our servers with an <strong>TCP connection through wifi</strong>. We achieved a bandwidth of 8 Mb/sec with the help of SRAM bufferization. For this project, we used development board from Altera (now Intel) and Texas Instrument. The wireless m<strong>icrocontroller firmware and FPGA configuration were written in C and Verilog.</strong></p>",
            "details": "<p>This application allows for transmitting data from a FPGA to a PC or any <strong>TCP/IP capable device through WiFi</strong> via a wireless enabled MCU (CC3200 from TI), at a rate up to<strong> 8 Mbits/sec</strong>.</p><p>A FPGA receive data from several sensors, store them in memory and transmit them to a Microcontroller (MCU) through a <strong>SPI connection custom (written in verilog)</strong>.</p><p>The MCU first connect itself to an access point (WiFi) and then to a receiving server (in our case a <strong>python program we wrote</strong>).</p><p>Afterward, the MCU starts accepting the SPI data sent from the FPGA and store them in a Buffer. Once the buffer is full enough, the MCU send data to a computer through the TCP/IP protocol.</p><p>Meanwhile, it still receives data from the SPI.</p><p>These parallel processes (SPI reception, TCP transmission) repeat endlessly as long as the (socket) connection between the MCU and the PC stays alive.</p><p>The key point of this project was to create a reliable connection between the FPGA and the MCU as the <strong>MCU often drop the connection with the remote server</strong>. Therefore the <strong>FPGA needed to wait the connection to recover and store the data into a SRAM chip placed on its board.</strong></p><p>Once the project finalized, sources along with a comprehensive user manual were sent to the research team in need for this particular use case.</p><p><strong>Sources and user manual available on GitHub:</strong></p><p><strong><a href=\"https://github.com/pseudoincorrect\">https://github.com/pseudoincorrect</a> (FPGA_MCU_wifi)</strong></p>",
            "pictures": [
                "assets/projects_assets/fpgaWifi/diagram.png",
                "assets/projects_assets/fpgaWifi/fpgaWifi.jpg"
            ],
            "tags": ["FPGA", "Verilog", "WiFi", "C programming", "Socket Programming", "TCP"],
            "location": "HBKU, Doha, Qatar",
            "date": "2016"
        },
        {
            "title": "Various hardware accelerator based on FPGA projects",
            "mainPicture": "assets/projects_assets/fractal/mandelbrot.png",
            "summary": "<h5>How can I deepen my knowledge of hardware design ?</h5><p>The purpose of these projects were purely educational. For the need of my current job, I needed to <strong>create a set of laboratories</strong> (practical exercises) and teach Digital System Design and Computer Architecture. In order to reach a level I judged satisfying I set myself several goals, took <strong>few advanced classes on the subject (Cornell ECE5760)</strong>. I needed as well to and worked on challenging projects.</p><ul><li>A Cellular Automaton display</li><li>Hardware ODE (Ordinary Differential Equation) solver</li><li>A Sound Generator based on Multiprocessor PDE (&nbsp;partial differential equations) real-time synthesis of a nonlinear drum&nbsp;</li><li>A Mandelbrot set solver</li><li>My final project was the FPGA WiFi link there-above which was part of a research project</li></ul>",
            "details": "<h5>In most of the case these projects followed these steps:</h5><ul><li>Study of the mathematical and physical problem on which they were based. For instance with the Sound Generator, we needed to understand how to create a mesh of hardware nodes (Finite Element Computation) communicating together and implement the PDE solver</li><li>Making a higher level architecture, involving Multiple Architecture Diagrams</li><li>Making a first implementation with Verilog</li><li>Simulating this implementation on a RTL Simulator, in our case ModelSim</li><li>Optimize the hardware in term of speed and Size</li><li>Implement and test it on the DE2-115 FPGA board</li></ul><p><strong>Code available on github:</strong></p><p><strong><a href=\"https://github.com/pseudoincorrect\">https://github.com/pseudoincorrect</a> (Verilog_Labs_Corn)</strong></p><p>Overall these classes, brought me so much knowledge of Computer Architecture, Digital Design and Hardware acceleration,<strong> I cannot say thank you enough to Bruce Land, Senior Lecturer in Cornell University to make these resources available online.</strong></p>",
            "pictures": [
                "assets/projects_assets/fractal/automaton.png",
                "assets/projects_assets/fractal/mesh.png",
                "assets/projects_assets/fractal/ddf.png"
            ],
            "tags": ["FPGA", "Hardware Acceleration", "Highly Parallelized Systems", "Computer Architecture"],
            "location": "HBKU, Doha, Qatar",
            "date": "2016"
        },
        {
            "title": "",
            "mainPicture": "assets/projects_assets/",
            "summary": "",
            "details": "",
            "pictures": [
                "assets/projects_assets/"
            ],
            "tags": [],
            "location": "HBKU, Doha, Qatar",
            "date": "2017"
        },
        {
            "title": "",
            "mainPicture": "assets/projects_assets/",
            "summary": "",
            "details": "",
            "pictures": [
                "assets/projects_assets/"
            ],
            "tags": [],
            "location": "HBKU, Doha, Qatar",
            "date": "2017"
        },
        {
            "title": "",
            "mainPicture": "assets/projects_assets/",
            "summary": "",
            "details": "",
            "pictures": [
                "assets/projects_assets/"
            ],
            "tags": [],
            "location": "HBKU, Doha, Qatar",
            "date": "2017"
        }
    ]

}

